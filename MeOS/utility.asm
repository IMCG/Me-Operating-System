; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\utility.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_hexes
_DATA	SEGMENT
_hexes	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
$SG1648	DB	'0x', 00H
	ORG $+1
$SG1694	DB	0aH, '%s', 00H
$SG1699	DB	'Assertion failed!!', 00H
_DATA	ENDS
PUBLIC	_uitoa
PUBLIC	_itoa
PUBLIC	_printf
PUBLIC	_printfln
PUBLIC	_memset
PUBLIC	_atoui
PUBLIC	_atoui_dec
PUBLIC	_atoui_hex
PUBLIC	_PANIC
PUBLIC	_ASSERT
PUBLIC	_pow
PUBLIC	_printf_base
EXTRN	_strlength:PROC
EXTRN	_Printch:PROC
EXTRN	_Print:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_buffer$ = -60						; size = 20
_lval$ = -40						; size = 8
_ptr$ = -32						; size = 4
_ival$ = -28						; size = 4
tv74 = -24						; size = 4
tv80 = -20						; size = 4
_val$ = -16						; size = 4
_length$ = -12						; size = 2
_i$1 = -8						; size = 2
_cval$ = -1						; size = 1
_fmt$ = 8						; size = 4
_arg_start$ = 12					; size = 4
_printf_base PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
; Line 128
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	_strlength
	add	esp, 4
	mov	WORD PTR _length$[ebp], ax
; Line 137
	xor	ecx, ecx
	mov	WORD PTR _i$1[ebp], cx
	jmp	SHORT $LN4@printf_bas
$LN2@printf_bas:
	mov	dx, WORD PTR _i$1[ebp]
	add	dx, 1
	mov	WORD PTR _i$1[ebp], dx
$LN4@printf_bas:
	movzx	eax, WORD PTR _i$1[ebp]
	movzx	ecx, WORD PTR _length$[ebp]
	cmp	eax, ecx
	jge	$LN1@printf_bas
; Line 139
	movzx	edx, WORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	cl, BYTE PTR [eax+edx]
	mov	BYTE PTR tv74[ebp], cl
	cmp	BYTE PTR tv74[ebp], 37			; 00000025H
	je	SHORT $LN9@printf_bas
	jmp	$LN19@printf_bas
$LN9@printf_bas:
; Line 143
	movzx	edx, WORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _fmt$[ebp]
	movsx	ecx, BYTE PTR [eax+edx+1]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR tv80[ebp]
	sub	edx, 98					; 00000062H
	mov	DWORD PTR tv80[ebp], edx
	cmp	DWORD PTR tv80[ebp], 22			; 00000016H
	ja	$LN7@printf_bas
	mov	eax, DWORD PTR tv80[ebp]
	movzx	ecx, BYTE PTR $LN21@printf_bas[eax]
	jmp	DWORD PTR $LN22@printf_bas[ecx*4]
$LN10@printf_bas:
; Line 146
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _val$[ebp], ecx
; Line 147
	push	10					; 0000000aH
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_uitoa
	add	esp, 12					; 0000000cH
; Line 148
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
; Line 149
	jmp	$LN7@printf_bas
$LN11@printf_bas:
; Line 151
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _ival$[ebp], ecx
; Line 152
	push	10					; 0000000aH
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _ival$[ebp]
	push	eax
	call	_itoa
	add	esp, 12					; 0000000cH
; Line 153
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
; Line 154
	jmp	$LN7@printf_bas
$LN12@printf_bas:
; Line 156
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _val$[ebp], ecx
; Line 157
	push	16					; 00000010H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_uitoa
	add	esp, 12					; 0000000cH
; Line 158
	push	OFFSET $SG1648
	call	_Print
	add	esp, 4
; Line 159
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
; Line 160
	jmp	$LN7@printf_bas
$LN13@printf_bas:
; Line 162
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _val$[ebp], ecx
; Line 163
	push	16					; 00000010H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_uitoa
	add	esp, 12					; 0000000cH
; Line 164
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
; Line 165
	jmp	$LN7@printf_bas
$LN14@printf_bas:
; Line 167
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 168
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_Print
	add	esp, 4
; Line 169
	jmp	$LN7@printf_bas
$LN15@printf_bas:
; Line 171
	mov	eax, DWORD PTR _arg_start$[ebp]
	add	eax, 4
	mov	DWORD PTR _arg_start$[ebp], eax
	mov	ecx, DWORD PTR _arg_start$[ebp]
	mov	dl, BYTE PTR [ecx-4]
	mov	BYTE PTR _cval$[ebp], dl
; Line 172
	movzx	eax, BYTE PTR _cval$[ebp]
	push	eax
	call	_Printch
	add	esp, 4
; Line 173
	jmp	SHORT $LN7@printf_bas
$LN16@printf_bas:
; Line 175
	mov	ecx, DWORD PTR _arg_start$[ebp]
	add	ecx, 4
	mov	DWORD PTR _arg_start$[ebp], ecx
	mov	edx, DWORD PTR _arg_start$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR _lval$[ebp], eax
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR _lval$[ebp+4], ecx
; Line 176
	push	10					; 0000000aH
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _lval$[ebp]
	push	eax
	call	_uitoa
	add	esp, 12					; 0000000cH
; Line 177
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
; Line 178
	jmp	SHORT $LN7@printf_bas
$LN17@printf_bas:
; Line 180
	mov	edx, DWORD PTR _arg_start$[ebp]
	add	edx, 4
	mov	DWORD PTR _arg_start$[ebp], edx
	mov	eax, DWORD PTR _arg_start$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _val$[ebp], ecx
; Line 181
	push	2
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_uitoa
	add	esp, 12					; 0000000cH
; Line 182
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_Print
	add	esp, 4
$LN7@printf_bas:
; Line 187
	mov	dx, WORD PTR _i$1[ebp]
	add	dx, 1
	mov	WORD PTR _i$1[ebp], dx
; Line 188
	jmp	SHORT $LN5@printf_bas
$LN19@printf_bas:
; Line 191
	movzx	eax, WORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _fmt$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	push	edx
	call	_Printch
	add	esp, 4
$LN5@printf_bas:
; Line 193
	jmp	$LN2@printf_bas
$LN1@printf_bas:
; Line 194
	mov	esp, ebp
	pop	ebp
	ret	0
$LN22@printf_bas:
	DD	$LN17@printf_bas
	DD	$LN15@printf_bas
	DD	$LN12@printf_bas
	DD	$LN11@printf_bas
	DD	$LN16@printf_bas
	DD	$LN14@printf_bas
	DD	$LN10@printf_bas
	DD	$LN13@printf_bas
	DD	$LN7@printf_bas
$LN21@printf_bas:
	DB	0
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	3
	DB	8
	DB	8
	DB	4
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
	DB	8
	DB	6
	DB	8
	DB	8
	DB	7
_printf_base ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_res$ = -8						; size = 4
_i$1 = -4						; size = 4
_base$ = 8						; size = 4
_exp$ = 12						; size = 4
_pow	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 85
	mov	DWORD PTR _res$[ebp], 1
; Line 86
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@pow
$LN2@pow:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@pow:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _exp$[ebp]
	jae	SHORT $LN3@pow
; Line 87
	mov	edx, DWORD PTR _res$[ebp]
	imul	edx, DWORD PTR _base$[ebp]
	mov	DWORD PTR _res$[ebp], edx
	jmp	SHORT $LN2@pow
$LN3@pow:
; Line 88
	mov	eax, DWORD PTR _res$[ebp]
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
_pow	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_expr$ = 8						; size = 4
_ASSERT	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 251
	push	ebp
	mov	ebp, esp
; Line 252
	cmp	DWORD PTR _expr$[ebp], 0
	jne	SHORT $LN1@ASSERT
; Line 253
	push	OFFSET $SG1699
	call	_PANIC
	add	esp, 4
$LN1@ASSERT:
; Line 254
	pop	ebp
	ret	0
_ASSERT	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_str$ = 8						; size = 4
_PANIC	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 245
	push	ebp
	mov	ebp, esp
; Line 246
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	OFFSET $SG1694
	call	_printf
	add	esp, 8
; Line 247
	hlt
; Line 248
	pop	ebp
	ret	0
_PANIC	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_mult$1 = -24						; size = 4
tv138 = -20						; size = 4
tv129 = -16						; size = 4
tv87 = -12						; size = 4
_res$ = -8						; size = 4
_i$2 = -4						; size = 4
_input$ = 8						; size = 4
_length$ = 12						; size = 2
_atoui_hex PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 101
	mov	DWORD PTR _res$[ebp], 0
; Line 103
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@atoui_hex
$LN2@atoui_hex:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@atoui_hex:
	movzx	ecx, WORD PTR _length$[ebp]
	cmp	DWORD PTR _i$2[ebp], ecx
	jae	$LN3@atoui_hex
; Line 105
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _i$2[ebp]
	movsx	eax, BYTE PTR [edx]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR _mult$1[ebp], eax
; Line 107
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$2[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 97					; 00000061H
	jl	SHORT $LN7@atoui_hex
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _i$2[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 122				; 0000007aH
	jle	SHORT $LN9@atoui_hex
$LN7@atoui_hex:
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _i$2[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN8@atoui_hex
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$2[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 90					; 0000005aH
	jle	SHORT $LN9@atoui_hex
$LN8@atoui_hex:
	mov	DWORD PTR tv87[ebp], 0
	jmp	SHORT $LN10@atoui_hex
$LN9@atoui_hex:
	mov	DWORD PTR tv87[ebp], 1
$LN10@atoui_hex:
	cmp	DWORD PTR tv87[ebp], 0
	je	SHORT $LN5@atoui_hex
; Line 108
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _i$2[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 65					; 00000041H
	jl	SHORT $LN11@atoui_hex
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _i$2[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN11@atoui_hex
	mov	DWORD PTR tv129[ebp], 1
	jmp	SHORT $LN12@atoui_hex
$LN11@atoui_hex:
	mov	DWORD PTR tv129[ebp], 0
$LN12@atoui_hex:
	cmp	DWORD PTR tv129[ebp], 0
	je	SHORT $LN13@atoui_hex
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$2[ebp]
	movsx	edx, BYTE PTR [ecx]
	add	edx, 32					; 00000020H
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN14@atoui_hex
$LN13@atoui_hex:
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _i$2[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR tv138[ebp], ecx
$LN14@atoui_hex:
	mov	edx, DWORD PTR tv138[ebp]
	sub	edx, 87					; 00000057H
	mov	DWORD PTR _mult$1[ebp], edx
$LN5@atoui_hex:
; Line 110
	movzx	eax, WORD PTR _length$[ebp]
	sub	eax, 1
	sub	eax, DWORD PTR _i$2[ebp]
	push	eax
	push	16					; 00000010H
	call	_pow
	add	esp, 8
	imul	eax, DWORD PTR _mult$1[ebp]
	add	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR _res$[ebp], eax
; Line 111
	jmp	$LN2@atoui_hex
$LN3@atoui_hex:
; Line 113
	mov	eax, DWORD PTR _res$[ebp]
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
_atoui_hex ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_res$ = -8						; size = 4
_i$1 = -4						; size = 4
_input$ = 8						; size = 4
_length$ = 12						; size = 2
_atoui_dec PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
; Line 118
	mov	DWORD PTR _res$[ebp], 0
; Line 120
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@atoui_dec
$LN2@atoui_dec:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@atoui_dec:
	movzx	ecx, WORD PTR _length$[ebp]
	cmp	DWORD PTR _i$1[ebp], ecx
	jae	SHORT $LN3@atoui_dec
; Line 121
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _i$1[ebp]
	movsx	esi, BYTE PTR [edx]
	sub	esi, 48					; 00000030H
	movzx	eax, WORD PTR _length$[ebp]
	sub	eax, 1
	sub	eax, DWORD PTR _i$1[ebp]
	push	eax
	push	10					; 0000000aH
	call	_pow
	add	esp, 8
	imul	esi, eax
	add	esi, DWORD PTR _res$[ebp]
	mov	DWORD PTR _res$[ebp], esi
	jmp	SHORT $LN2@atoui_dec
$LN3@atoui_dec:
; Line 123
	mov	eax, DWORD PTR _res$[ebp]
; Line 124
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_atoui_dec ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
tv85 = -8						; size = 4
tv76 = -4						; size = 4
_input$ = 8						; size = 4
_atoui	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 93
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _input$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 48					; 00000030H
	jne	$LN2@atoui
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _input$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN5@atoui
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _input$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN5@atoui
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN6@atoui
$LN5@atoui:
	mov	DWORD PTR tv76[ebp], 0
$LN6@atoui:
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN7@atoui
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _input$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN8@atoui
$LN7@atoui:
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _input$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	mov	DWORD PTR tv85[ebp], eax
$LN8@atoui:
	cmp	DWORD PTR tv85[ebp], 120		; 00000078H
	jne	SHORT $LN2@atoui
; Line 94
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_strlength
	add	esp, 4
	movzx	edx, ax
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 2
	push	eax
	call	_atoui_hex
	add	esp, 8
	jmp	SHORT $LN1@atoui
	jmp	SHORT $LN1@atoui
$LN2@atoui:
; Line 96
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_strlength
	add	esp, 4
	movzx	edx, ax
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_atoui_dec
	add	esp, 8
$LN1@atoui:
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
_atoui	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_new_ptr$ = -24						; size = 4
_index$ = -20						; size = 4
_i$1 = -16						; size = 4
_i$2 = -12						; size = 4
_ptr$ = -8						; size = 4
_val32$ = -4						; size = 4
_base$ = 8						; size = 4
_val$ = 12						; size = 1
_length$ = 16						; size = 4
_memset	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 220
	mov	eax, DWORD PTR _base$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _length$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	DWORD PTR _index$[ebp], edx
; Line 224
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@memset
$LN2@memset:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@memset:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jae	SHORT $LN3@memset
; Line 226
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	dl, BYTE PTR _val$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 227
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax
; Line 228
	mov	ecx, DWORD PTR _length$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _length$[ebp], ecx
; Line 229
	jmp	SHORT $LN2@memset
$LN3@memset:
; Line 231
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _new_ptr$[ebp], edx
; Line 232
	mov	eax, DWORD PTR _length$[ebp]
	shr	eax, 2
	mov	DWORD PTR _length$[ebp], eax
; Line 235
	movzx	ecx, BYTE PTR _val$[ebp]
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _val32$[ebp], ecx
; Line 236
	movzx	edx, BYTE PTR _val$[ebp]
	shl	edx, 8
	and	edx, 65280				; 0000ff00H
	or	edx, DWORD PTR _val32$[ebp]
	mov	DWORD PTR _val32$[ebp], edx
; Line 237
	movzx	eax, BYTE PTR _val$[ebp]
	shl	eax, 16					; 00000010H
	and	eax, 16711680				; 00ff0000H
	or	eax, DWORD PTR _val32$[ebp]
	mov	DWORD PTR _val32$[ebp], eax
; Line 238
	movzx	ecx, BYTE PTR _val$[ebp]
	shl	ecx, 24					; 00000018H
	and	ecx, -16777216				; ff000000H
	or	ecx, DWORD PTR _val32$[ebp]
	mov	DWORD PTR _val32$[ebp], ecx
; Line 240
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN7@memset
$LN5@memset:
	mov	edx, DWORD PTR _i$2[ebp]
	add	edx, 1
	mov	DWORD PTR _i$2[ebp], edx
$LN7@memset:
	mov	eax, DWORD PTR _i$2[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jae	SHORT $LN1@memset
; Line 241
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _new_ptr$[ebp]
	mov	eax, DWORD PTR _val32$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	jmp	SHORT $LN5@memset
$LN1@memset:
; Line 242
	mov	esp, ebp
	pop	ebp
	ret	0
_memset	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_l$ = -4						; size = 4
_fmt$ = 8						; size = 4
_printfln PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 209
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _l$[ebp], eax
; Line 211
	mov	ecx, DWORD PTR _l$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	call	_printf_base
	add	esp, 8
; Line 213
	mov	DWORD PTR _l$[ebp], 0
; Line 215
	push	10					; 0000000aH
	call	_Printch
	add	esp, 4
; Line 216
	mov	esp, ebp
	pop	ebp
	ret	0
_printfln ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_l$ = -4						; size = 4
_fmt$ = 8						; size = 4
_printf	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 197
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 199
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _l$[ebp], eax
; Line 201
	mov	ecx, DWORD PTR _l$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	call	_printf_base
	add	esp, 8
; Line 203
	mov	DWORD PTR _l$[ebp], 0
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_sign$ = -16						; size = 2
_length$ = -12						; size = 2
_i$ = -8						; size = 2
_temp$1 = -1						; size = 1
_val$ = 8						; size = 4
_buffer$ = 12						; size = 4
_base$ = 16						; size = 1
_itoa	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 39
	movzx	eax, BYTE PTR _base$[ebp]
	cmp	eax, 1
	jle	SHORT $LN9@itoa
	movzx	ecx, BYTE PTR _base$[ebp]
	cmp	ecx, 17					; 00000011H
	jl	SHORT $LN8@itoa
$LN9@itoa:
; Line 40
	jmp	$LN1@itoa
$LN8@itoa:
; Line 42
	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
; Line 43
	mov	eax, 1
	mov	WORD PTR _sign$[ebp], ax
; Line 45
	cmp	DWORD PTR _val$[ebp], 0
	jge	SHORT $LN4@itoa
; Line 47
	or	ecx, -1
	mov	WORD PTR _sign$[ebp], cx
; Line 48
	mov	edx, DWORD PTR _val$[ebp]
	neg	edx
	mov	DWORD PTR _val$[ebp], edx
$LN4@itoa:
; Line 53
	movzx	ecx, BYTE PTR _base$[ebp]
	mov	eax, DWORD PTR _val$[ebp]
	cdq
	idiv	ecx
	movzx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	dl, BYTE PTR _hexes[edx]
	mov	BYTE PTR [ecx+eax], dl
; Line 54
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
; Line 56
	movzx	ecx, BYTE PTR _base$[ebp]
	mov	eax, DWORD PTR _val$[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _val$[ebp], eax
	cmp	DWORD PTR _val$[ebp], 0
	jne	SHORT $LN4@itoa
; Line 58
	movzx	edx, BYTE PTR _base$[ebp]
	cmp	edx, 16					; 00000010H
	jne	SHORT $LN11@itoa
; Line 60
	movzx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [ecx+eax], 120			; 00000078H
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
; Line 61
	movzx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [ecx+eax], 48			; 00000030H
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN11@itoa:
; Line 64
	movsx	eax, WORD PTR _sign$[ebp]
	cmp	eax, -1
	jne	SHORT $LN12@itoa
; Line 65
	movzx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [edx+ecx], 45			; 0000002dH
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN12@itoa:
; Line 67
	movzx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [edx+ecx], 0
; Line 71
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strlength
	add	esp, 4
	mov	WORD PTR _length$[ebp], ax
; Line 72
	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
; Line 73
	jmp	SHORT $LN7@itoa
$LN5@itoa:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN7@itoa:
	movzx	ecx, WORD PTR _i$[ebp]
	movzx	eax, WORD PTR _length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	ecx, eax
	jge	SHORT $LN6@itoa
; Line 75
	movzx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	cl, BYTE PTR [eax+edx]
	mov	BYTE PTR _temp$1[ebp], cl
; Line 76
	movzx	edx, WORD PTR _length$[ebp]
	sub	edx, 1
	movzx	eax, WORD PTR _i$[ebp]
	sub	edx, eax
	movzx	ecx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	esi, DWORD PTR _buffer$[ebp]
	mov	dl, BYTE PTR [esi+edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 77
	movzx	eax, WORD PTR _length$[ebp]
	sub	eax, 1
	movzx	ecx, WORD PTR _i$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	cl, BYTE PTR _temp$1[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 78
	jmp	SHORT $LN5@itoa
$LN6@itoa:
; Line 80
	movzx	edx, WORD PTR _length$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [eax+edx], 0
$LN1@itoa:
; Line 81
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_itoa	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_length$ = -12						; size = 2
_i$ = -8						; size = 2
_temp$1 = -1						; size = 1
_val$ = 8						; size = 4
_buffer$ = 12						; size = 4
_base$ = 16						; size = 1
_uitoa	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\utility.c
; Line 6
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
; Line 7
	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
$LN4@uitoa:
; Line 10
	movzx	ecx, BYTE PTR _base$[ebp]
	mov	eax, DWORD PTR _val$[ebp]
	xor	edx, edx
	div	ecx
	movzx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	dl, BYTE PTR _hexes[edx]
	mov	BYTE PTR [ecx+eax], dl
; Line 11
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
; Line 13
	movzx	ecx, BYTE PTR _base$[ebp]
	mov	eax, DWORD PTR _val$[ebp]
	xor	edx, edx
	div	ecx
	mov	DWORD PTR _val$[ebp], eax
	cmp	DWORD PTR _val$[ebp], 0
	jne	SHORT $LN4@uitoa
; Line 21
	movzx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [eax+edx], 0
; Line 25
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strlength
	add	esp, 4
	mov	WORD PTR _length$[ebp], ax
; Line 26
	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
; Line 27
	jmp	SHORT $LN7@uitoa
$LN5@uitoa:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN7@uitoa:
	movzx	ecx, WORD PTR _i$[ebp]
	movzx	eax, WORD PTR _length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	ecx, eax
	jge	SHORT $LN6@uitoa
; Line 29
	movzx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	cl, BYTE PTR [eax+edx]
	mov	BYTE PTR _temp$1[ebp], cl
; Line 30
	movzx	edx, WORD PTR _length$[ebp]
	sub	edx, 1
	movzx	eax, WORD PTR _i$[ebp]
	sub	edx, eax
	movzx	ecx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	esi, DWORD PTR _buffer$[ebp]
	mov	dl, BYTE PTR [esi+edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 31
	movzx	eax, WORD PTR _length$[ebp]
	sub	eax, 1
	movzx	ecx, WORD PTR _i$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	cl, BYTE PTR _temp$1[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 32
	jmp	SHORT $LN5@uitoa
$LN6@uitoa:
; Line 34
	movzx	edx, WORD PTR _length$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [eax+edx], 0
; Line 35
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_uitoa	ENDP
_TEXT	ENDS
END
