; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\screen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_cursorX
PUBLIC	_cursorY
PUBLIC	_color
PUBLIC	_minWritable
PUBLIC	_SCREEN_WIDTH
PUBLIC	_SCREEN_HEIGHT
PUBLIC	_SCREEN_DEPTH
PUBLIC	_TAB_SIZE
_BSS	SEGMENT
_cursorX DW	01H DUP (?)
	ALIGN	4

_cursorY DW	01H DUP (?)
	ALIGN	4

_minWritable DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_canOutput:BYTE
_DATA	ENDS
CONST	SEGMENT
_SCREEN_WIDTH DB 050H
_SCREEN_HEIGHT DB 019H
_SCREEN_DEPTH DB 02H
_TAB_SIZE DB	014H
CONST	ENDS
_DATA	SEGMENT
_color	DB	03fH
_DATA	ENDS
PUBLIC	_ClearLine
PUBLIC	_UpdateCursor
PUBLIC	_SetCursor
PUBLIC	_ClearScreen
PUBLIC	_ScrollUp
PUBLIC	_NewLineCheck
PUBLIC	_Printch
PUBLIC	_Print
PUBLIC	_PrintCentered
PUBLIC	_SetColor
PUBLIC	_SetForegroundColor
PUBLIC	_SetBackgroundColor
PUBLIC	_MakeColor
PUBLIC	_PrintLine
PUBLIC	_SetMinWritable
EXTRN	_strlength:PROC
EXTRN	_outportb:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_min$ = 8						; size = 1
_SetMinWritable PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 168
	push	ebp
	mov	ebp, esp
; Line 169
	mov	al, BYTE PTR _min$[ebp]
	mov	BYTE PTR _minWritable, al
; Line 170
	pop	ebp
	ret	0
_SetMinWritable ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_PrintLine PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 162
	push	ebp
	mov	ebp, esp
; Line 163
	push	10					; 0000000aH
	call	_Printch
	add	esp, 4
; Line 164
	pop	ebp
	ret	0
_PrintLine ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_background$ = 8					; size = 1
_foreground$ = 12					; size = 1
_MakeColor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 157
	push	ebp
	mov	ebp, esp
; Line 158
	movzx	eax, BYTE PTR _background$[ebp]
	shl	eax, 4
	movzx	ecx, BYTE PTR _foreground$[ebp]
	or	eax, ecx
; Line 159
	pop	ebp
	ret	0
_MakeColor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
__color$ = 8						; size = 1
_SetBackgroundColor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 151
	push	ebp
	mov	ebp, esp
; Line 152
	movzx	eax, BYTE PTR _color
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _color, al
; Line 153
	movzx	ecx, BYTE PTR __color$[ebp]
	shl	ecx, 4
	movzx	edx, BYTE PTR _color
	or	edx, ecx
	mov	BYTE PTR _color, dl
; Line 154
	pop	ebp
	ret	0
_SetBackgroundColor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
__color$ = 8						; size = 1
_SetForegroundColor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 145
	push	ebp
	mov	ebp, esp
; Line 146
	movzx	eax, BYTE PTR _color
	and	eax, 240				; 000000f0H
	mov	BYTE PTR _color, al
; Line 147
	movzx	ecx, BYTE PTR __color$[ebp]
	movzx	edx, BYTE PTR _color
	or	edx, ecx
	mov	BYTE PTR _color, dl
; Line 148
	pop	ebp
	ret	0
_SetForegroundColor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_background$ = 8					; size = 1
_foreground$ = 12					; size = 1
_SetColor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	movzx	eax, BYTE PTR _background$[ebp]
	shl	eax, 4
	movzx	ecx, BYTE PTR _foreground$[ebp]
	or	eax, ecx
	mov	BYTE PTR _color, al
; Line 142
	pop	ebp
	ret	0
_SetColor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_length$ = -8						; size = 2
_startPos$ = -1						; size = 1
_str$ = 8						; size = 4
_PrintCentered PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 132
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strlength
	add	esp, 4
	mov	WORD PTR _length$[ebp], ax
; Line 133
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	movzx	ecx, WORD PTR _length$[ebp]
	sub	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	BYTE PTR _startPos$[ebp], al
; Line 135
	movzx	dx, BYTE PTR _startPos$[ebp]
	mov	WORD PTR _cursorX, dx
; Line 136
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_Print
	add	esp, 4
; Line 137
	mov	esp, ebp
	pop	ebp
	ret	0
_PrintCentered ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_length$ = -8						; size = 2
_i$ = -4						; size = 2
_str$ = 8						; size = 4
_Print	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 123
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strlength
	add	esp, 4
	mov	WORD PTR _length$[ebp], ax
; Line 125
	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
; Line 126
	jmp	SHORT $LN4@Print
$LN2@Print:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN4@Print:
	movzx	eax, WORD PTR _i$[ebp]
	movzx	ecx, WORD PTR _length$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN1@Print
; Line 127
	movzx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _str$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	push	ecx
	call	_Printch
	add	esp, 4
	jmp	SHORT $LN2@Print
$LN1@Print:
; Line 128
	mov	esp, ebp
	pop	ebp
	ret	0
_Print	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_vidmem$ = -8						; size = 4
tv67 = -4						; size = 4
_c$ = 8							; size = 1
_Printch PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
; Line 80
	movzx	eax, BYTE PTR _canOutput
	test	eax, eax
	jne	SHORT $LN4@Printch
; Line 81
	jmp	$LN1@Printch
$LN4@Printch:
; Line 83
	mov	DWORD PTR _vidmem$[ebp], 753664		; 000b8000H
; Line 86
	movsx	ecx, BYTE PTR _c$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	mov	edx, DWORD PTR tv67[ebp]
	sub	edx, 8
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 5
	ja	$LN10@Printch
	mov	eax, DWORD PTR tv67[ebp]
	jmp	DWORD PTR $LN13@Printch[eax*4]
$LN5@Printch:
; Line 89
	movzx	ecx, WORD PTR _cursorX
	movzx	edx, BYTE PTR _minWritable
	cmp	ecx, edx
	jl	SHORT $LN6@Printch
; Line 91
	mov	ax, WORD PTR _cursorX
	sub	ax, 1
	mov	WORD PTR _cursorX, ax
; Line 92
	movzx	ecx, WORD PTR _cursorY
	movzx	edx, BYTE PTR _SCREEN_WIDTH
	imul	ecx, edx
	movzx	eax, WORD PTR _cursorX
	add	ecx, eax
	movzx	edx, BYTE PTR _SCREEN_DEPTH
	imul	ecx, edx
	mov	eax, DWORD PTR _vidmem$[ebp]
	mov	BYTE PTR [eax+ecx], 0
$LN6@Printch:
; Line 94
	jmp	$LN2@Printch
$LN7@Printch:
; Line 96
	movzx	ecx, BYTE PTR _TAB_SIZE
	movzx	eax, WORD PTR _cursorX
	movzx	esi, BYTE PTR _TAB_SIZE
	cdq
	idiv	esi
	sub	ecx, edx
	movzx	edx, WORD PTR _cursorX
	add	edx, ecx
	mov	WORD PTR _cursorX, dx
; Line 97
	jmp	$LN2@Printch
$LN8@Printch:
; Line 99
	xor	eax, eax
	mov	WORD PTR _cursorX, ax
; Line 100
	jmp	$LN2@Printch
$LN9@Printch:
; Line 102
	xor	ecx, ecx
	mov	WORD PTR _cursorX, cx
; Line 103
	mov	dx, WORD PTR _cursorY
	add	dx, 1
	mov	WORD PTR _cursorY, dx
; Line 104
	jmp	SHORT $LN2@Printch
$LN10@Printch:
; Line 106
	movzx	eax, WORD PTR _cursorY
	movzx	ecx, BYTE PTR _SCREEN_WIDTH
	imul	eax, ecx
	movzx	edx, WORD PTR _cursorX
	add	eax, edx
	movzx	ecx, BYTE PTR _SCREEN_DEPTH
	imul	eax, ecx
	mov	edx, DWORD PTR _vidmem$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 107
	movzx	edx, WORD PTR _cursorY
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	imul	edx, eax
	movzx	ecx, WORD PTR _cursorX
	add	edx, ecx
	movzx	eax, BYTE PTR _SCREEN_DEPTH
	imul	edx, eax
	mov	ecx, DWORD PTR _vidmem$[ebp]
	mov	al, BYTE PTR _color
	mov	BYTE PTR [ecx+edx+1], al
; Line 108
	mov	cx, WORD PTR _cursorX
	add	cx, 1
	mov	WORD PTR _cursorX, cx
$LN2@Printch:
; Line 112
	movzx	edx, WORD PTR _cursorX
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	cmp	edx, eax
	jl	SHORT $LN11@Printch
; Line 114
	xor	ecx, ecx
	mov	WORD PTR _cursorX, cx
; Line 115
	mov	dx, WORD PTR _cursorY
	add	dx, 1
	mov	WORD PTR _cursorY, dx
$LN11@Printch:
; Line 117
	call	_NewLineCheck
; Line 118
	call	_UpdateCursor
$LN1@Printch:
; Line 119
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@Printch:
	DD	$LN5@Printch
	DD	$LN7@Printch
	DD	$LN9@Printch
	DD	$LN10@Printch
	DD	$LN10@Printch
	DD	$LN8@Printch
_Printch ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_NewLineCheck PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 73
	push	ebp
	mov	ebp, esp
; Line 74
	movzx	eax, WORD PTR _cursorY
	movzx	ecx, BYTE PTR _SCREEN_HEIGHT
	sub	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN1@NewLineChe
; Line 75
	call	_ClearScreen
$LN1@NewLineChe:
; Line 76
	pop	ebp
	ret	0
_NewLineCheck ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_vidmem$ = -8						; size = 4
_i$ = -4						; size = 4
_lineNumber$ = 8					; size = 1
_ScrollUp PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 56
	mov	DWORD PTR _vidmem$[ebp], 753664		; 000b8000H
; Line 58
	mov	DWORD PTR _i$[ebp], 0
; Line 59
	jmp	SHORT $LN4@ScrollUp
$LN2@ScrollUp:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ScrollUp:
	movzx	ecx, BYTE PTR _SCREEN_WIDTH
	movzx	edx, BYTE PTR _SCREEN_HEIGHT
	sub	edx, 1
	imul	ecx, edx
	movzx	eax, BYTE PTR _SCREEN_DEPTH
	imul	ecx, eax
	cmp	DWORD PTR _i$[ebp], ecx
	jge	SHORT $LN3@ScrollUp
; Line 60
	movzx	ecx, BYTE PTR _SCREEN_WIDTH
	movzx	edx, BYTE PTR _SCREEN_DEPTH
	imul	ecx, edx
	movzx	eax, BYTE PTR _lineNumber$[ebp]
	imul	ecx, eax
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _vidmem$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _vidmem$[ebp]
	mov	cl, BYTE PTR [eax+ecx]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN2@ScrollUp
$LN3@ScrollUp:
; Line 62
	movzx	edx, BYTE PTR _SCREEN_HEIGHT
	sub	edx, 1
	push	edx
	movzx	eax, BYTE PTR _SCREEN_HEIGHT
	sub	eax, 1
	movzx	ecx, BYTE PTR _lineNumber$[ebp]
	sub	eax, ecx
	push	eax
	call	_ClearLine
	add	esp, 8
; Line 64
	movzx	edx, WORD PTR _cursorY
	movzx	eax, BYTE PTR _lineNumber$[ebp]
	sub	edx, eax
	jns	SHORT $LN5@ScrollUp
; Line 65
	xor	ecx, ecx
	mov	WORD PTR _cursorY, cx
	mov	dx, WORD PTR _cursorY
	mov	WORD PTR _cursorX, dx
	jmp	SHORT $LN6@ScrollUp
$LN5@ScrollUp:
; Line 67
	movzx	eax, BYTE PTR _lineNumber$[ebp]
	movzx	ecx, WORD PTR _cursorY
	sub	ecx, eax
	mov	WORD PTR _cursorY, cx
$LN6@ScrollUp:
; Line 69
	call	_UpdateCursor
; Line 70
	mov	esp, ebp
	pop	ebp
	ret	0
_ScrollUp ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_ClearScreen PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 47
	push	ebp
	mov	ebp, esp
; Line 48
	movzx	eax, BYTE PTR _SCREEN_HEIGHT
	sub	eax, 1
	push	eax
	push	0
	call	_ClearLine
	add	esp, 8
; Line 50
	xor	ecx, ecx
	mov	WORD PTR _cursorY, cx
	mov	dx, WORD PTR _cursorY
	mov	WORD PTR _cursorX, dx
; Line 51
	call	_UpdateCursor
; Line 52
	pop	ebp
	ret	0
_ClearScreen ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_SetCursor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 40
	push	ebp
	mov	ebp, esp
; Line 41
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _cursorX, ax
; Line 42
	mov	cx, WORD PTR _y$[ebp]
	mov	WORD PTR _cursorY, cx
; Line 43
	call	_UpdateCursor
; Line 44
	pop	ebp
	ret	0
_SetCursor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_temp$ = -4						; size = 2
_UpdateCursor PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 31
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	movzx	ecx, WORD PTR _cursorY
	imul	eax, ecx
	movzx	edx, WORD PTR _cursorX
	add	eax, edx
	mov	WORD PTR _temp$[ebp], ax
; Line 33
	push	14					; 0000000eH
	push	980					; 000003d4H
	call	_outportb
	add	esp, 8
; Line 34
	movzx	eax, WORD PTR _temp$[ebp]
	sar	eax, 8
	push	eax
	push	981					; 000003d5H
	call	_outportb
	add	esp, 8
; Line 35
	push	15					; 0000000fH
	push	980					; 000003d4H
	call	_outportb
	add	esp, 8
; Line 36
	movzx	ecx, BYTE PTR _temp$[ebp]
	push	ecx
	push	981					; 000003d5H
	call	_outportb
	add	esp, 8
; Line 37
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateCursor ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_vidmem$ = -12						; size = 4
_row$ = -8						; size = 2
_i$ = -4						; size = 2
_from$ = 8						; size = 1
_to$ = 12						; size = 1
_ClearLine PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\screen.c
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 15
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	movzx	ecx, BYTE PTR _from$[ebp]
	imul	eax, ecx
	movzx	edx, BYTE PTR _SCREEN_DEPTH
	imul	eax, edx
	mov	WORD PTR _row$[ebp], ax
; Line 16
	mov	DWORD PTR _vidmem$[ebp], 753664		; 000b8000H
; Line 18
	mov	ax, WORD PTR _row$[ebp]
	mov	WORD PTR _i$[ebp], ax
; Line 19
	jmp	SHORT $LN4@ClearLine
$LN2@ClearLine:
	movzx	ecx, WORD PTR _i$[ebp]
	add	ecx, 2
	mov	WORD PTR _i$[ebp], cx
$LN4@ClearLine:
	movzx	edx, WORD PTR _i$[ebp]
	movzx	eax, BYTE PTR _SCREEN_WIDTH
	movzx	ecx, BYTE PTR _to$[ebp]
	add	ecx, 1
	imul	eax, ecx
	movzx	ecx, BYTE PTR _SCREEN_DEPTH
	imul	eax, ecx
	cmp	edx, eax
	jge	SHORT $LN1@ClearLine
; Line 21
	movzx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _vidmem$[ebp]
	mov	BYTE PTR [eax+edx], 0
; Line 22
	movzx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _vidmem$[ebp]
	mov	al, BYTE PTR _color
	mov	BYTE PTR [edx+ecx+1], al
; Line 23
	jmp	SHORT $LN2@ClearLine
$LN1@ClearLine:
; Line 24
	mov	esp, ebp
	pop	ebp
	ret	0
_ClearLine ENDP
_TEXT	ENDS
END
