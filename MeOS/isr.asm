; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\isr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_interrupt_handlers:DWORD:0100H
_DATA	ENDS
_DATA	SEGMENT
$SG1558	DB	0aH, 'interrupt received:%h', 0aH, 00H
$SG1561	DB	'Unhandled exception %u', 00H
_DATA	ENDS
PUBLIC	_register_interrupt_handler
PUBLIC	_isr_handler
PUBLIC	_irq_handler
EXTRN	_outportb:PROC
EXTRN	_printf:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_handler$1 = -4						; size = 4
_regs$ = 8						; size = 64
_irq_handler PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\isr.c
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 22
	mov	eax, DWORD PTR _regs$[ebp+36]
	cmp	DWORD PTR _interrupt_handlers[eax*4], 0
	je	SHORT $LN2@irq_handle
; Line 24
	mov	ecx, DWORD PTR _regs$[ebp+36]
	mov	edx, DWORD PTR _interrupt_handlers[ecx*4]
	mov	DWORD PTR _handler$1[ebp], edx
; Line 25
	sub	esp, 64					; 00000040H
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR _regs$[ebp]
	mov	edi, esp
	rep movsd
	call	DWORD PTR _handler$1[ebp]
	add	esp, 64					; 00000040H
$LN2@irq_handle:
; Line 28
	cmp	DWORD PTR _regs$[ebp+36], 40		; 00000028H
	jb	SHORT $LN3@irq_handle
; Line 29
	push	32					; 00000020H
	push	160					; 000000a0H
	call	_outportb
	add	esp, 8
$LN3@irq_handle:
; Line 31
	push	32					; 00000020H
	push	32					; 00000020H
	call	_outportb
	add	esp, 8
; Line 32
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_irq_handler ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_handler$1 = -4						; size = 4
_regs$ = 8						; size = 64
_isr_handler PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\isr.c
; Line 6
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 7
	mov	eax, DWORD PTR _regs$[ebp+36]
	push	eax
	push	OFFSET $SG1558
	call	_printf
	add	esp, 8
; Line 9
	mov	ecx, DWORD PTR _regs$[ebp+36]
	cmp	DWORD PTR _interrupt_handlers[ecx*4], 0
	je	SHORT $LN2@isr_handle
; Line 11
	mov	edx, DWORD PTR _regs$[ebp+36]
	mov	eax, DWORD PTR _interrupt_handlers[edx*4]
	mov	DWORD PTR _handler$1[ebp], eax
; Line 12
	sub	esp, 64					; 00000040H
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR _regs$[ebp]
	mov	edi, esp
	rep movsd
	call	DWORD PTR _handler$1[ebp]
	add	esp, 64					; 00000040H
; Line 13
	jmp	SHORT $LN1@isr_handle
$LN2@isr_handle:
; Line 16
	mov	ecx, DWORD PTR _regs$[ebp+36]
	push	ecx
	push	OFFSET $SG1561
	call	_printf
	add	esp, 8
$LN1@isr_handle:
; Line 18
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_isr_handler ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_n$ = 8							; size = 1
_handler$ = 12						; size = 4
_register_interrupt_handler PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\isr.c
; Line 35
	push	ebp
	mov	ebp, esp
; Line 36
	movzx	eax, BYTE PTR _n$[ebp]
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	DWORD PTR _interrupt_handlers[eax*4], ecx
; Line 37
	pop	ebp
	ret	0
_register_interrupt_handler ENDP
_TEXT	ENDS
END
