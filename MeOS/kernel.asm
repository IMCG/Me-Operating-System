; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\kernel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_canOutput
PUBLIC	?strMemoryTypes@@3PAPADA			; strMemoryTypes
_DATA	SEGMENT
_canOutput DB	01H
	ORG $+3
?strMemoryTypes@@3PAPADA DD FLAT:$SG3018		; strMemoryTypes
	DD	FLAT:$SG3019
	DD	FLAT:$SG3020
	DD	FLAT:$SG3021
_DATA	ENDS
CONST	SEGMENT
$SG3075	DB	'Welcome to ME Operating System', 0aH, 00H
$SG3076	DB	'Memory detected: %h KB %h MB', 0aH, 00H
$SG3061	DB	00H
	ORG $+1
$SG3077	DB	'Kernel size: %u bytes', 0aH, 00H
	ORG $+1
$SG3078	DB	'Boot device: %h', 0aH, 00H
	ORG $+3
$SG3081	DB	'region %i: start: 0x%x%x length (bytes): 0x%x%x type: %i'
	DB	' (%s)', 0aH, 00H
	ORG $+1
$SG3018	DB	'Available', 00H
	ORG $+2
$SG3019	DB	'Reserved', 00H
	ORG $+3
$SG3020	DB	'ACPI Reclaim', 00H
	ORG $+3
$SG3021	DB	'ACPI NVS', 00H
	ORG $+3
$SG3058	DB	'Max blocks: %u', 00H
	ORG $+1
$SG3059	DB	'Available blocks: %u', 00H
	ORG $+3
$SG3060	DB	'Used blocks: %u', 00H
CONST	ENDS
PUBLIC	?GetMemoryStats@@YAXXZ				; GetMemoryStats
PUBLIC	?kmain@@YAHPAUmultiboot_info@@@Z		; kmain
EXTRN	_ClearScreen:PROC
EXTRN	_SetColor:PROC
EXTRN	_printf:PROC
EXTRN	_printfln:PROC
EXTRN	_init_descriptor_tables:PROC
EXTRN	_init_pit_timer:PROC
EXTRN	_timer_callback:PROC
EXTRN	_pmmngr_init:PROC
EXTRN	_pmmngr_get_block_use_count:PROC
EXTRN	_pmmngr_get_free_block_count:PROC
EXTRN	_pmmngr_get_block_count:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_kernel_size$ = -16					; size = 4
_memoryKB$ = -12					; size = 4
_region$ = -8						; size = 4
_i$1 = -4						; size = 4
_boot_info$ = 8						; size = 4
?kmain@@YAHPAUmultiboot_info@@@Z PROC			; kmain
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\kernel.cpp
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 371
	mov	DWORD PTR _kernel_size$[ebp], edx
; Line 373
	cli
; Line 374
	call	_init_descriptor_tables
; Line 375
	sti
; Line 377
	push	OFFSET _timer_callback
	push	1000					; 000003e8H
	call	_init_pit_timer
	add	esp, 8
; Line 379
	push	15					; 0000000fH
	push	1
	call	_SetColor
	add	esp, 8
; Line 380
	call	_ClearScreen
; Line 384
	push	OFFSET $SG3075
	call	_printf
	add	esp, 4
; Line 386
	mov	eax, DWORD PTR _boot_info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _boot_info$[ebp]
	mov	eax, DWORD PTR [edx+8]
	shl	eax, 6
	lea	ecx, DWORD PTR [ecx+eax+1024]
	mov	DWORD PTR _memoryKB$[ebp], ecx
; Line 387
	mov	edx, DWORD PTR _memoryKB$[ebp]
	shr	edx, 10					; 0000000aH
	push	edx
	mov	eax, DWORD PTR _memoryKB$[ebp]
	push	eax
	push	OFFSET $SG3076
	call	_printf
	add	esp, 12					; 0000000cH
; Line 389
	mov	ecx, DWORD PTR _kernel_size$[ebp]
	push	ecx
	push	OFFSET $SG3077
	call	_printf
	add	esp, 8
; Line 391
	mov	edx, DWORD PTR _boot_info$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET $SG3078
	call	_printf
	add	esp, 8
; Line 393
	mov	DWORD PTR _region$[ebp], 1280		; 00000500H
; Line 395
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@kmain
$LN2@kmain:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@kmain:
	cmp	DWORD PTR _i$1[ebp], 15			; 0000000fH
	jge	$LN3@kmain
; Line 397
	imul	edx, DWORD PTR _i$1[ebp], 24
	mov	eax, DWORD PTR _region$[ebp]
	cmp	DWORD PTR [eax+edx+16], 4
	jbe	SHORT $LN7@kmain
; Line 398
	imul	ecx, DWORD PTR _i$1[ebp], 24
	mov	edx, DWORD PTR _region$[ebp]
	mov	DWORD PTR [edx+ecx+16], 1
$LN7@kmain:
; Line 400
	cmp	DWORD PTR _i$1[ebp], 0
	jle	SHORT $LN8@kmain
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	cmp	DWORD PTR [ecx+eax], 0
	jne	SHORT $LN8@kmain
; Line 401
	jmp	SHORT $LN3@kmain
$LN8@kmain:
; Line 403
	imul	edx, DWORD PTR _i$1[ebp], 24
	mov	eax, DWORD PTR _region$[ebp]
	mov	ecx, DWORD PTR [eax+edx+16]
	mov	edx, DWORD PTR ?strMemoryTypes@@3PAPADA[ecx*4-4]
	push	edx
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	mov	edx, DWORD PTR [ecx+eax+16]
	push	edx
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	mov	edx, DWORD PTR [ecx+eax+12]
	push	edx
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	imul	eax, DWORD PTR _i$1[ebp], 24
	mov	ecx, DWORD PTR _region$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	push	edx
	mov	eax, DWORD PTR _i$1[ebp]
	push	eax
	push	OFFSET $SG3081
	call	_printf
	add	esp, 32					; 00000020H
; Line 407
	jmp	$LN2@kmain
$LN3@kmain:
; Line 409
	mov	BYTE PTR _canOutput, 1
; Line 411
	mov	ecx, DWORD PTR _kernel_size$[ebp]
	shl	ecx, 9
	add	ecx, 1048576				; 00100000H
	push	ecx
	mov	edx, DWORD PTR _memoryKB$[ebp]
	push	edx
	call	_pmmngr_init
	add	esp, 8
$LN5@kmain:
; Line 413
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@kmain
	jmp	SHORT $LN5@kmain
$LN6@kmain:
; Line 415
	mov	eax, -559039814				; deadbabaH
; Line 416
	mov	esp, ebp
	pop	ebp
	ret	0
?kmain@@YAHPAUmultiboot_info@@@Z ENDP			; kmain
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
?GetMemoryStats@@YAXXZ PROC				; GetMemoryStats
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\kernel.cpp
; Line 360
	push	ebp
	mov	ebp, esp
; Line 361
	call	_pmmngr_get_block_count
	push	eax
	push	OFFSET $SG3058
	call	_printfln
	add	esp, 8
; Line 362
	call	_pmmngr_get_free_block_count
	push	eax
	push	OFFSET $SG3059
	call	_printfln
	add	esp, 8
; Line 363
	call	_pmmngr_get_block_use_count
	push	eax
	push	OFFSET $SG3060
	call	_printfln
	add	esp, 8
; Line 365
	push	OFFSET $SG3061
	call	_printfln
	add	esp, 4
; Line 366
	pop	ebp
	ret	0
?GetMemoryStats@@YAXXZ ENDP				; GetMemoryStats
_TEXT	ENDS
END
