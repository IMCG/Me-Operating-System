; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\mmngr_virtual.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?current_directory@@3PAUpdirectory_t@@A		; current_directory
PUBLIC	?current_pdbr@@3IA				; current_pdbr
_BSS	SEGMENT
?current_directory@@3PAUpdirectory_t@@A DD 01H DUP (?)	; current_directory
?current_pdbr@@3IA DD 01H DUP (?)			; current_pdbr
_BSS	ENDS
PUBLIC	_vmmngr_map_page
PUBLIC	_vmmngr_initialize
PUBLIC	_vmmngr_alloc_page
PUBLIC	_vmmngr_free_page
PUBLIC	_vmmngr_switch_directory
PUBLIC	_vmmngr_get_directory
PUBLIC	_vmmngr_flush_TLB_entry
PUBLIC	_vmmngr_ptable_clear
PUBLIC	_vmmngr_ptable_lookup_entry
PUBLIC	_vmmngr_pdirectory_clear
PUBLIC	_vmmngr_pdirectory_lookup_entry
EXTRN	_memset:PROC
EXTRN	_pmmngr_alloc_block:PROC
EXTRN	_pmmngr_free_block:PROC
EXTRN	_pmmngr_load_PDBR:PROC
EXTRN	_pt_entry_add_attrib:PROC
EXTRN	_pt_entry_del_attrib:PROC
EXTRN	_pt_entry_set_frame:PROC
EXTRN	_pt_entry_get_frame:PROC
EXTRN	_pd_entry_add_attrib:PROC
EXTRN	_pd_entry_test_attrib:PROC
EXTRN	_pd_entry_set_frame:PROC
EXTRN	_pd_entry_get_frame:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_p$ = 8							; size = 4
_addr$ = 12						; size = 4
_vmmngr_pdirectory_lookup_entry PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 116
	push	ebp
	mov	ebp, esp
; Line 117
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@vmmngr_pdi
; Line 118
	mov	eax, DWORD PTR _addr$[ebp]
	shr	eax, 22					; 00000016H
	and	eax, 1023				; 000003ffH
	mov	ecx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN1@vmmngr_pdi
$LN2@vmmngr_pdi:
; Line 120
	xor	eax, eax
$LN1@vmmngr_pdi:
; Line 121
	pop	ebp
	ret	0
_vmmngr_pdirectory_lookup_entry ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pdir$ = 8						; size = 4
_vmmngr_pdirectory_clear PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 112
	push	ebp
	mov	ebp, esp
; Line 113
	pop	ebp
	ret	0
_vmmngr_pdirectory_clear ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_p$ = 8							; size = 4
_addr$ = 12						; size = 4
_vmmngr_ptable_lookup_entry PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@vmmngr_pta
; Line 106
	mov	eax, DWORD PTR _addr$[ebp]
	shr	eax, 12					; 0000000cH
	and	eax, 1023				; 000003ffH
	mov	ecx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN1@vmmngr_pta
$LN2@vmmngr_pta:
; Line 108
	xor	eax, eax
$LN1@vmmngr_pta:
; Line 109
	pop	ebp
	ret	0
_vmmngr_ptable_lookup_entry ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_table$ = 8						; size = 4
_vmmngr_ptable_clear PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 100
	push	ebp
	mov	ebp, esp
; Line 101
	pop	ebp
	ret	0
_vmmngr_ptable_clear ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = 8						; size = 4
_vmmngr_flush_TLB_entry PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 90
	push	ebp
	mov	ebp, esp
; Line 93
	cli
; Line 94
	invlpg	DWORD PTR _addr$[ebp]
; Line 95
	sti
; Line 97
	pop	ebp
	ret	0
_vmmngr_flush_TLB_entry ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_vmmngr_get_directory PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 85
	push	ebp
	mov	ebp, esp
; Line 86
	mov	eax, DWORD PTR ?current_directory@@3PAUpdirectory_t@@A ; current_directory
; Line 87
	pop	ebp
	ret	0
_vmmngr_get_directory ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_dir$ = 8						; size = 4
_vmmngr_switch_directory PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 75
	push	ebp
	mov	ebp, esp
; Line 76
	cmp	DWORD PTR _dir$[ebp], 0
	jne	SHORT $LN2@vmmngr_swi
; Line 77
	xor	al, al
	jmp	SHORT $LN1@vmmngr_swi
$LN2@vmmngr_swi:
; Line 79
	mov	eax, DWORD PTR _dir$[ebp]
	mov	DWORD PTR ?current_directory@@3PAUpdirectory_t@@A, eax ; current_directory
; Line 80
	mov	ecx, DWORD PTR ?current_pdbr@@3IA	; current_pdbr
	push	ecx
	call	_pmmngr_load_PDBR
	add	esp, 4
; Line 81
	mov	al, 1
$LN1@vmmngr_swi:
; Line 82
	pop	ebp
	ret	0
_vmmngr_switch_directory ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -4						; size = 4
_entry$ = 8						; size = 4
_vmmngr_free_page PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 62
	cmp	DWORD PTR _entry$[ebp], 0
	jne	SHORT $LN2@vmmngr_fre
; Line 63
	jmp	SHORT $LN1@vmmngr_fre
$LN2@vmmngr_fre:
; Line 65
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_pt_entry_get_frame
	add	esp, 4
	mov	DWORD PTR _addr$[ebp], eax
; Line 67
	cmp	DWORD PTR _addr$[ebp], 0
	je	SHORT $LN3@vmmngr_fre
; Line 68
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	call	_pmmngr_free_block
	add	esp, 4
$LN3@vmmngr_fre:
; Line 70
	push	1
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_pt_entry_del_attrib
	add	esp, 8
; Line 71
	push	2
	mov	ecx, DWORD PTR _entry$[ebp]
	push	ecx
	call	_pt_entry_del_attrib
	add	esp, 8
$LN1@vmmngr_fre:
; Line 72
	mov	esp, ebp
	pop	ebp
	ret	0
_vmmngr_free_page ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -4						; size = 4
_entry$ = 8						; size = 4
_vmmngr_alloc_page PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 48
	call	_pmmngr_alloc_block
	mov	DWORD PTR _addr$[ebp], eax
; Line 50
	cmp	DWORD PTR _addr$[ebp], 0
	jne	SHORT $LN2@vmmngr_all
; Line 51
	xor	al, al
	jmp	SHORT $LN1@vmmngr_all
$LN2@vmmngr_all:
; Line 53
	push	1
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_pt_entry_add_attrib
	add	esp, 8
; Line 54
	push	2
	mov	ecx, DWORD PTR _entry$[ebp]
	push	ecx
	call	_pt_entry_add_attrib
	add	esp, 8
; Line 55
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_pt_entry_set_frame
	add	esp, 8
; Line 57
	mov	al, 1
$LN1@vmmngr_all:
; Line 58
	mov	esp, ebp
	pop	ebp
	ret	0
_vmmngr_alloc_page ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_vmmngr_initialize PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 43
	push	ebp
	mov	ebp, esp
; Line 44
	pop	ebp
	ret	0
_vmmngr_initialize ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_table$ = -20						; size = 4
_dir$ = -16						; size = 4
_table$1 = -12						; size = 4
_page$ = -8						; size = 4
_e$ = -4						; size = 4
_phys$ = 8						; size = 4
_virt$ = 12						; size = 4
_vmmngr_map_page PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_virtual.cpp
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 13
	call	_vmmngr_get_directory
	mov	DWORD PTR _dir$[ebp], eax
; Line 15
	mov	eax, DWORD PTR _virt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	call	_vmmngr_pdirectory_lookup_entry
	add	esp, 8
	mov	DWORD PTR _e$[ebp], eax
; Line 17
	push	1
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	_pd_entry_test_attrib
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@vmmngr_map
; Line 19
	call	_pmmngr_alloc_block
	mov	DWORD PTR _table$1[ebp], eax
; Line 21
	cmp	DWORD PTR _table$1[ebp], 0
	jne	SHORT $LN3@vmmngr_map
; Line 22
	jmp	$LN1@vmmngr_map
$LN3@vmmngr_map:
; Line 24
	push	4
	push	0
	mov	ecx, DWORD PTR _table$1[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 26
	push	1
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	_pd_entry_add_attrib
	add	esp, 8
; Line 27
	push	2
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	call	_pd_entry_add_attrib
	add	esp, 8
; Line 28
	mov	ecx, DWORD PTR _table$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	_pd_entry_set_frame
	add	esp, 8
$LN2@vmmngr_map:
; Line 33
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_pd_entry_get_frame
	add	esp, 4
	mov	DWORD PTR _table$[ebp], eax
; Line 34
	mov	edx, DWORD PTR _virt$[ebp]
	push	edx
	mov	eax, DWORD PTR _table$[ebp]
	push	eax
	call	_vmmngr_ptable_lookup_entry
	add	esp, 8
	mov	DWORD PTR _page$[ebp], eax
; Line 36
	mov	ecx, DWORD PTR _page$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 37
	push	1
	mov	edx, DWORD PTR _page$[ebp]
	push	edx
	call	_pt_entry_add_attrib
	add	esp, 8
; Line 38
	push	2
	mov	eax, DWORD PTR _page$[ebp]
	push	eax
	call	_pt_entry_add_attrib
	add	esp, 8
; Line 39
	mov	ecx, DWORD PTR _phys$[ebp]
	push	ecx
	mov	edx, DWORD PTR _page$[ebp]
	push	edx
	call	_pt_entry_set_frame
	add	esp, 8
$LN1@vmmngr_map:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
_vmmngr_map_page ENDP
_TEXT	ENDS
END
