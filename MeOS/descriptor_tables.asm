; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\descriptor_tables.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_interrupt_handlers:DWORD:0100H
COMM	_gdt_entries:QWORD:05H
COMM	_gdt_ptr:FWORD
COMM	_idt_entries:QWORD:0100H
COMM	_idt_ptr:FWORD
_DATA	ENDS
_DATA	SEGMENT
$SG1662	DB	'Divion by zero', 00H
	ORG $+1
$SG1667	DB	'General Protection Fault', 00H
_DATA	ENDS
PUBLIC	_init_descriptor_tables
PUBLIC	_init_gdt
PUBLIC	_gdt_set_gate
PUBLIC	_init_idt
PUBLIC	_idt_set_gate
PUBLIC	_DivisionByZero
PUBLIC	_GPF
EXTRN	_memset:PROC
EXTRN	_PANIC:PROC
EXTRN	_init_pic:PROC
EXTRN	_register_interrupt_handler:PROC
EXTRN	_flush_gdt:PROC
EXTRN	_flush_idt:PROC
EXTRN	_isr0:PROC
EXTRN	_isr1:PROC
EXTRN	_isr2:PROC
EXTRN	_isr3:PROC
EXTRN	_isr4:PROC
EXTRN	_isr5:PROC
EXTRN	_isr6:PROC
EXTRN	_isr7:PROC
EXTRN	_isr8:PROC
EXTRN	_isr9:PROC
EXTRN	_isr10:PROC
EXTRN	_isr11:PROC
EXTRN	_isr12:PROC
EXTRN	_isr13:PROC
EXTRN	_isr14:PROC
EXTRN	_isr15:PROC
EXTRN	_isr16:PROC
EXTRN	_isr17:PROC
EXTRN	_isr18:PROC
EXTRN	_isr19:PROC
EXTRN	_isr20:PROC
EXTRN	_isr21:PROC
EXTRN	_isr22:PROC
EXTRN	_isr23:PROC
EXTRN	_isr24:PROC
EXTRN	_isr25:PROC
EXTRN	_isr26:PROC
EXTRN	_isr27:PROC
EXTRN	_isr28:PROC
EXTRN	_isr29:PROC
EXTRN	_isr30:PROC
EXTRN	_isr31:PROC
EXTRN	_irq0:PROC
EXTRN	_irq1:PROC
EXTRN	_irq2:PROC
EXTRN	_irq3:PROC
EXTRN	_irq4:PROC
EXTRN	_irq5:PROC
EXTRN	_irq6:PROC
EXTRN	_irq7:PROC
EXTRN	_irq8:PROC
EXTRN	_irq9:PROC
EXTRN	_irq10:PROC
EXTRN	_irq11:PROC
EXTRN	_irq12:PROC
EXTRN	_irq13:PROC
EXTRN	_irq14:PROC
EXTRN	_irq15:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_regs$ = 8						; size = 64
_GPF	PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 17
	push	ebp
	mov	ebp, esp
; Line 18
	push	OFFSET $SG1667
	call	_PANIC
	add	esp, 4
; Line 19
	pop	ebp
	ret	0
_GPF	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_regs$ = 8						; size = 64
_DivisionByZero PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 12
	push	ebp
	mov	ebp, esp
; Line 13
	push	OFFSET $SG1662
	call	_PANIC
	add	esp, 4
; Line 14
	pop	ebp
	ret	0
_DivisionByZero ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_num$ = 8						; size = 1
_base$ = 12						; size = 4
_selector$ = 16						; size = 2
_flags$ = 20						; size = 1
_idt_set_gate PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 122
	push	ebp
	mov	ebp, esp
; Line 123
	mov	eax, DWORD PTR _base$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, BYTE PTR _num$[ebp]
	mov	WORD PTR _idt_entries[ecx*8], ax
; Line 124
	mov	edx, DWORD PTR _base$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, BYTE PTR _num$[ebp]
	mov	WORD PTR _idt_entries[eax*8+6], dx
; Line 126
	movzx	ecx, BYTE PTR _num$[ebp]
	mov	dx, WORD PTR _selector$[ebp]
	mov	WORD PTR _idt_entries[ecx*8+2], dx
; Line 127
	movzx	eax, BYTE PTR _num$[ebp]
	mov	BYTE PTR _idt_entries[eax*8+4], 0
; Line 128
	movzx	ecx, BYTE PTR _num$[ebp]
	mov	dl, BYTE PTR _flags$[ebp]
	mov	BYTE PTR _idt_entries[ecx*8+5], dl
; Line 129
	pop	ebp
	ret	0
_idt_set_gate ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_init_idt PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 47
	push	ebp
	mov	ebp, esp
; Line 48
	mov	DWORD PTR _idt_ptr+2, OFFSET _idt_entries
; Line 49
	mov	eax, 2047				; 000007ffH
	mov	WORD PTR _idt_ptr, ax
; Line 51
	call	_init_pic
; Line 53
	push	2048					; 00000800H
	push	0
	push	OFFSET _idt_entries
	call	_memset
	add	esp, 12					; 0000000cH
; Line 55
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr0
	push	0
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 56
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr1
	push	1
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 57
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr2
	push	2
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 58
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr3
	push	3
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 59
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr4
	push	4
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 60
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr5
	push	5
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 61
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr6
	push	6
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 62
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr7
	push	7
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 63
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr8
	push	8
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 64
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr9
	push	9
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 65
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr10
	push	10					; 0000000aH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 66
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr11
	push	11					; 0000000bH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 67
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr12
	push	12					; 0000000cH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 68
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr13
	push	13					; 0000000dH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 69
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr14
	push	14					; 0000000eH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 70
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr15
	push	15					; 0000000fH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 71
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr16
	push	16					; 00000010H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 72
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr17
	push	17					; 00000011H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 73
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr18
	push	18					; 00000012H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 74
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr19
	push	19					; 00000013H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 75
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr20
	push	20					; 00000014H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 76
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr21
	push	21					; 00000015H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 77
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr22
	push	22					; 00000016H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 78
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr23
	push	23					; 00000017H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 79
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr24
	push	24					; 00000018H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 80
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr25
	push	25					; 00000019H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 81
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr26
	push	26					; 0000001aH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 82
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr27
	push	27					; 0000001bH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 83
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr28
	push	28					; 0000001cH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 84
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr29
	push	29					; 0000001dH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 85
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr30
	push	30					; 0000001eH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 86
	push	142					; 0000008eH
	push	8
	push	OFFSET _isr31
	push	31					; 0000001fH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 88
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq0
	push	32					; 00000020H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 89
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq1
	push	33					; 00000021H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 90
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq2
	push	34					; 00000022H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 91
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq3
	push	35					; 00000023H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 92
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq4
	push	36					; 00000024H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 93
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq5
	push	37					; 00000025H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 94
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq6
	push	38					; 00000026H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 95
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq7
	push	39					; 00000027H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 96
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq8
	push	40					; 00000028H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 97
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq9
	push	41					; 00000029H
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 98
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq10
	push	42					; 0000002aH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 99
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq11
	push	43					; 0000002bH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 100
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq12
	push	44					; 0000002cH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 101
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq13
	push	45					; 0000002dH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 102
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq14
	push	46					; 0000002eH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 103
	push	142					; 0000008eH
	push	8
	push	OFFSET _irq15
	push	47					; 0000002fH
	call	_idt_set_gate
	add	esp, 16					; 00000010H
; Line 105
	push	OFFSET _idt_ptr
	call	_flush_idt
	add	esp, 4
; Line 106
	pop	ebp
	ret	0
_init_idt ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_num$ = 8						; size = 2
_base$ = 12						; size = 4
_limit$ = 16						; size = 4
_access$ = 20						; size = 1
_gran$ = 24						; size = 1
_gdt_set_gate PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 109
	push	ebp
	mov	ebp, esp
; Line 110
	mov	eax, DWORD PTR _base$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, WORD PTR _num$[ebp]
	mov	WORD PTR _gdt_entries[ecx*8+2], ax
; Line 111
	mov	edx, DWORD PTR _base$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR _num$[ebp]
	mov	BYTE PTR _gdt_entries[eax*8+4], dl
; Line 112
	mov	ecx, DWORD PTR _base$[ebp]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR _num$[ebp]
	mov	BYTE PTR _gdt_entries[edx*8+7], cl
; Line 114
	mov	eax, DWORD PTR _limit$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, WORD PTR _num$[ebp]
	mov	WORD PTR _gdt_entries[ecx*8], ax
; Line 115
	mov	edx, DWORD PTR _limit$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 15					; 0000000fH
	movzx	eax, WORD PTR _num$[ebp]
	mov	BYTE PTR _gdt_entries[eax*8+6], dl
; Line 117
	movzx	ecx, WORD PTR _num$[ebp]
	movzx	edx, BYTE PTR _gran$[ebp]
	and	edx, 240				; 000000f0H
	movzx	eax, BYTE PTR _gdt_entries[ecx*8+6]
	or	eax, edx
	movzx	ecx, WORD PTR _num$[ebp]
	mov	BYTE PTR _gdt_entries[ecx*8+6], al
; Line 118
	movzx	edx, WORD PTR _num$[ebp]
	mov	al, BYTE PTR _access$[ebp]
	mov	BYTE PTR _gdt_entries[edx*8+5], al
; Line 119
	pop	ebp
	ret	0
_gdt_set_gate ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_init_gdt PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 33
	push	ebp
	mov	ebp, esp
; Line 34
	mov	DWORD PTR _gdt_ptr+2, OFFSET _gdt_entries
; Line 35
	mov	eax, 39					; 00000027H
	mov	WORD PTR _gdt_ptr, ax
; Line 37
	push	0
	push	0
	push	0
	push	0
	push	0
	call	_gdt_set_gate
	add	esp, 20					; 00000014H
; Line 38
	push	207					; 000000cfH
	push	154					; 0000009aH
	push	-1
	push	0
	push	1
	call	_gdt_set_gate
	add	esp, 20					; 00000014H
; Line 39
	push	207					; 000000cfH
	push	146					; 00000092H
	push	-1
	push	0
	push	2
	call	_gdt_set_gate
	add	esp, 20					; 00000014H
; Line 40
	push	207					; 000000cfH
	push	250					; 000000faH
	push	1048575					; 000fffffH
	push	0
	push	3
	call	_gdt_set_gate
	add	esp, 20					; 00000014H
; Line 41
	push	207					; 000000cfH
	push	242					; 000000f2H
	push	1048575					; 000fffffH
	push	0
	push	4
	call	_gdt_set_gate
	add	esp, 20					; 00000014H
; Line 43
	push	OFFSET _gdt_ptr
	call	_flush_gdt
	add	esp, 4
; Line 44
	pop	ebp
	ret	0
_init_gdt ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_init_descriptor_tables PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\descriptor_tables.c
; Line 22
	push	ebp
	mov	ebp, esp
; Line 23
	call	_init_gdt
; Line 24
	call	_init_idt
; Line 26
	push	1024					; 00000400H
	push	0
	push	OFFSET _interrupt_handlers
	call	_memset
	add	esp, 12					; 0000000cH
; Line 28
	push	OFFSET _DivisionByZero
	push	0
	call	_register_interrupt_handler
	add	esp, 8
; Line 29
	push	OFFSET _GPF
	push	13					; 0000000dH
	call	_register_interrupt_handler
	add	esp, 8
; Line 30
	pop	ebp
	ret	0
_init_descriptor_tables ENDP
_TEXT	ENDS
END
