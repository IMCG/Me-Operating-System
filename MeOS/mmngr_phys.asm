; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\michalis\Documents\Visual Studio 2015\Projects\MeOS\MeOS\mmngr_phys.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_mmngr_memory_size DD 01H DUP (?)
_mmngr_used_blocks DD 01H DUP (?)
_mmngr_max_blocks DD 01H DUP (?)
_mmngr_bitmap DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_pmmngr_init
PUBLIC	_pmmngr_init_region
PUBLIC	_pmmngr_deinit_region
PUBLIC	_pmmngr_alloc_block
PUBLIC	_pmmngr_free_block
PUBLIC	_pmmngr_alloc_blocks
PUBLIC	_pmmngr_free_blocks
PUBLIC	_pmmngr_get_memory_size
PUBLIC	_pmmngr_get_block_use_count
PUBLIC	_pmmngr_get_free_block_count
PUBLIC	_pmmngr_get_block_count
PUBLIC	_pmmngr_get_block_size
PUBLIC	_pmmngr_paging_enable
PUBLIC	_pmmngr_get_paging_enabled
PUBLIC	_pmmngr_load_PDBR
PUBLIC	_pmmngr_get_PDBR
PUBLIC	?mmap_set@@YAXH@Z				; mmap_set
PUBLIC	?mmap_unset@@YAXH@Z				; mmap_unset
PUBLIC	?mmap_test@@YA_NH@Z				; mmap_test
PUBLIC	?mmap_first_free@@YAHXZ				; mmap_first_free
PUBLIC	?mmap_first_free_s@@YAHI@Z			; mmap_first_free_s
EXTRN	_memset:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_startBit$1 = -8					; size = 4
_bit$2 = -4						; size = 4
_count$ = 8						; size = 4
?mmap_first_free_s@@YAHI@Z PROC				; mmap_first_free_s
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 54
	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN7@mmap_first
; Line 55
	or	eax, -1
	jmp	$LN1@mmap_first
$LN7@mmap_first:
; Line 57
	cmp	DWORD PTR _count$[ebp], 1
	jne	SHORT $LN8@mmap_first
; Line 58
	call	?mmap_first_free@@YAHXZ			; mmap_first_free
	jmp	$LN1@mmap_first
$LN8@mmap_first:
; Line 60
	mov	DWORD PTR _bit$2[ebp], 0
$LN4@mmap_first:
	mov	eax, DWORD PTR _bit$2[ebp]
	cmp	eax, DWORD PTR _mmngr_max_blocks
	jae	$LN3@mmap_first
; Line 62
	mov	ecx, DWORD PTR _bit$2[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _mmngr_bitmap
	cmp	DWORD PTR [edx+ecx*4], -1
	jne	SHORT $LN9@mmap_first
; Line 64
	mov	eax, DWORD PTR _bit$2[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _bit$2[ebp], eax
; Line 65
	jmp	SHORT $LN4@mmap_first
$LN9@mmap_first:
; Line 68
	mov	ecx, DWORD PTR _bit$2[ebp]
	push	ecx
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN10@mmap_first
; Line 70
	mov	eax, DWORD PTR _bit$2[ebp]
	mov	DWORD PTR _startBit$1[ebp], eax
$LN5@mmap_first:
; Line 71
	mov	ecx, DWORD PTR _bit$2[ebp]
	cmp	ecx, DWORD PTR _mmngr_max_blocks
	jae	SHORT $LN10@mmap_first
; Line 73
	mov	edx, DWORD PTR _bit$2[ebp]
	add	edx, 1
	mov	DWORD PTR _bit$2[ebp], edx
; Line 75
	mov	eax, DWORD PTR _bit$2[ebp]
	push	eax
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	ecx, al
	cmp	ecx, 1
	jne	SHORT $LN11@mmap_first
; Line 76
	jmp	SHORT $LN10@mmap_first
$LN11@mmap_first:
; Line 78
	mov	edx, DWORD PTR _bit$2[ebp]
	sub	edx, DWORD PTR _startBit$1[ebp]
	add	edx, 1
	cmp	edx, DWORD PTR _count$[ebp]
	jne	SHORT $LN12@mmap_first
; Line 79
	mov	eax, DWORD PTR _startBit$1[ebp]
	jmp	SHORT $LN1@mmap_first
$LN12@mmap_first:
; Line 80
	jmp	SHORT $LN5@mmap_first
$LN10@mmap_first:
; Line 83
	mov	eax, DWORD PTR _bit$2[ebp]
	add	eax, 1
	mov	DWORD PTR _bit$2[ebp], eax
; Line 84
	jmp	$LN4@mmap_first
$LN3@mmap_first:
; Line 86
	or	eax, -1
$LN1@mmap_first:
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
?mmap_first_free_s@@YAHI@Z ENDP				; mmap_first_free_s
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_bit$1 = -12						; size = 4
_j$2 = -8						; size = 4
_i$3 = -4						; size = 4
?mmap_first_free@@YAHXZ PROC				; mmap_first_free
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 33
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@mmap_first
$LN2@mmap_first:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@mmap_first:
	mov	ecx, DWORD PTR _mmngr_max_blocks
	shr	ecx, 5
	cmp	DWORD PTR _i$3[ebp], ecx
	jae	SHORT $LN3@mmap_first
; Line 35
	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _mmngr_bitmap
	cmp	DWORD PTR [eax+edx*4], -1
	je	SHORT $LN8@mmap_first
; Line 37
	mov	DWORD PTR _bit$1[ebp], 1
; Line 38
	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN7@mmap_first
$LN5@mmap_first:
	mov	ecx, DWORD PTR _j$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$2[ebp], ecx
$LN7@mmap_first:
	cmp	DWORD PTR _j$2[ebp], 32			; 00000020H
	jge	SHORT $LN8@mmap_first
; Line 40
	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _mmngr_bitmap
	mov	ecx, DWORD PTR [eax+edx*4]
	and	ecx, DWORD PTR _bit$1[ebp]
	jne	SHORT $LN9@mmap_first
; Line 41
	mov	eax, DWORD PTR _i$3[ebp]
	shl	eax, 5
	add	eax, DWORD PTR _j$2[ebp]
	jmp	SHORT $LN1@mmap_first
$LN9@mmap_first:
; Line 43
	mov	edx, DWORD PTR _bit$1[ebp]
	shl	edx, 1
	mov	DWORD PTR _bit$1[ebp], edx
; Line 44
	jmp	SHORT $LN5@mmap_first
$LN8@mmap_first:
; Line 46
	jmp	SHORT $LN2@mmap_first
$LN3@mmap_first:
; Line 48
	or	eax, -1
$LN1@mmap_first:
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?mmap_first_free@@YAHXZ ENDP				; mmap_first_free
_TEXT	ENDS
; Function compile flags: /Odtpy
;	COMDAT ?mmap_test@@YA_NH@Z
_TEXT	SEGMENT
tv71 = -1						; size = 1
_bit$ = 8						; size = 4
?mmap_test@@YA_NH@Z PROC				; mmap_test, COMDAT
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 27
	mov	eax, DWORD PTR _bit$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	ecx, DWORD PTR _bit$[ebp]
	and	ecx, -2147483617			; 8000001fH
	jns	SHORT $LN5@mmap_test
	dec	ecx
	or	ecx, -32				; ffffffe0H
	inc	ecx
$LN5@mmap_test:
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR _mmngr_bitmap
	and	edx, DWORD PTR [ecx+eax*4]
	je	SHORT $LN3@mmap_test
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@mmap_test
$LN3@mmap_test:
	mov	BYTE PTR tv71[ebp], 0
$LN4@mmap_test:
	mov	al, BYTE PTR tv71[ebp]
; Line 28
	mov	esp, ebp
	pop	ebp
	ret	0
?mmap_test@@YA_NH@Z ENDP				; mmap_test
_TEXT	ENDS
; Function compile flags: /Odtpy
;	COMDAT ?mmap_unset@@YAXH@Z
_TEXT	SEGMENT
_bit$ = 8						; size = 4
?mmap_unset@@YAXH@Z PROC				; mmap_unset, COMDAT
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 21
	push	ebp
	mov	ebp, esp
	push	esi
; Line 22
	mov	eax, DWORD PTR _bit$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	ecx, DWORD PTR _bit$[ebp]
	and	ecx, -2147483617			; 8000001fH
	jns	SHORT $LN3@mmap_unset
	dec	ecx
	or	ecx, -32				; ffffffe0H
	inc	ecx
$LN3@mmap_unset:
	mov	esi, 1
	shl	esi, cl
	not	esi
	mov	ecx, DWORD PTR _mmngr_bitmap
	and	esi, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _bit$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	edx, DWORD PTR _mmngr_bitmap
	mov	DWORD PTR [edx+eax*4], esi
; Line 23
	pop	esi
	pop	ebp
	ret	0
?mmap_unset@@YAXH@Z ENDP				; mmap_unset
_TEXT	ENDS
; Function compile flags: /Odtpy
;	COMDAT ?mmap_set@@YAXH@Z
_TEXT	SEGMENT
_bit$ = 8						; size = 4
?mmap_set@@YAXH@Z PROC					; mmap_set, COMDAT
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 16
	push	ebp
	mov	ebp, esp
	push	esi
; Line 17
	mov	eax, DWORD PTR _bit$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	ecx, DWORD PTR _bit$[ebp]
	and	ecx, -2147483617			; 8000001fH
	jns	SHORT $LN3@mmap_set
	dec	ecx
	or	ecx, -32				; ffffffe0H
	inc	ecx
$LN3@mmap_set:
	mov	esi, 1
	shl	esi, cl
	mov	ecx, DWORD PTR _mmngr_bitmap
	or	esi, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _bit$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	edx, DWORD PTR _mmngr_bitmap
	mov	DWORD PTR [edx+eax*4], esi
; Line 18
	pop	esi
	pop	ebp
	ret	0
?mmap_set@@YAXH@Z ENDP					; mmap_set
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -4						; size = 4
_pmmngr_get_PDBR PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 276
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 281
	mov	eax, cr3
; Line 282
	mov	DWORD PTR _addr$[ebp], eax
; Line 284
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_get_PDBR ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = 8						; size = 4
_pmmngr_load_PDBR PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 267
	push	ebp
	mov	ebp, esp
; Line 270
	mov	eax, DWORD PTR _addr$[ebp]
; Line 271
	mov	cr3, eax
; Line 273
	pop	ebp
	ret	0
_pmmngr_load_PDBR ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_res$ = -4						; size = 4
_pmmngr_get_paging_enabled PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 251
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 256
	mov	eax, cr0
; Line 257
	mov	DWORD PTR _res$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _res$[ebp]
	and	eax, -2147483648			; 80000000H
	je	SHORT $LN2@pmmngr_get
; Line 261
	mov	al, 1
	jmp	SHORT $LN1@pmmngr_get
$LN2@pmmngr_get:
; Line 263
	xor	al, al
$LN1@pmmngr_get:
; Line 264
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_get_paging_enabled ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_flag$ = 8						; size = 1
_pmmngr_paging_enable PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 231
	push	ebp
	mov	ebp, esp
; Line 234
	mov	eax, cr0
; Line 235
	cmp	BYTE PTR _flag$[ebp], 1
; Line 236
	jne	SHORT $disable$3
$enable$4:
; Line 239
	or	eax, -2147483648			; 80000000H
; Line 240
	jmp	SHORT $done$5
$disable$3:
; Line 243
	and	eax, 2147483647				; 7fffffffH
$done$5:
; Line 246
	mov	cr0, eax
; Line 248
	pop	ebp
	ret	0
_pmmngr_paging_enable ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pmmngr_get_block_size PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 226
	push	ebp
	mov	ebp, esp
; Line 227
	mov	eax, 4096				; 00001000H
; Line 228
	pop	ebp
	ret	0
_pmmngr_get_block_size ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pmmngr_get_block_count PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 221
	push	ebp
	mov	ebp, esp
; Line 222
	mov	eax, DWORD PTR _mmngr_max_blocks
; Line 223
	pop	ebp
	ret	0
_pmmngr_get_block_count ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pmmngr_get_free_block_count PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 216
	push	ebp
	mov	ebp, esp
; Line 217
	mov	eax, DWORD PTR _mmngr_max_blocks
	sub	eax, DWORD PTR _mmngr_used_blocks
; Line 218
	pop	ebp
	ret	0
_pmmngr_get_free_block_count ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pmmngr_get_block_use_count PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 211
	push	ebp
	mov	ebp, esp
; Line 212
	mov	eax, DWORD PTR _mmngr_used_blocks
; Line 213
	pop	ebp
	ret	0
_pmmngr_get_block_use_count ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_pmmngr_get_memory_size PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 206
	push	ebp
	mov	ebp, esp
; Line 207
	mov	eax, DWORD PTR _mmngr_memory_size
; Line 208
	pop	ebp
	ret	0
_pmmngr_get_memory_size ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -12						; size = 4
_frame$ = -8						; size = 4
_i$1 = -4						; size = 4
_block$ = 8						; size = 4
_count$ = 12						; size = 4
_pmmngr_free_blocks PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 192
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR _addr$[ebp], eax
; Line 193
	mov	ecx, DWORD PTR _addr$[ebp]
	shr	ecx, 12					; 0000000cH
	mov	DWORD PTR _frame$[ebp], ecx
; Line 195
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@pmmngr_fre
$LN2@pmmngr_fre:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@pmmngr_fre:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jae	SHORT $LN1@pmmngr_fre
; Line 197
	mov	ecx, DWORD PTR _frame$[ebp]
	add	ecx, DWORD PTR _i$1[ebp]
	push	ecx
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	edx, al
	cmp	edx, 1
	jne	SHORT $LN5@pmmngr_fre
; Line 199
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	call	?mmap_unset@@YAXH@Z			; mmap_unset
	add	esp, 4
; Line 200
	mov	ecx, DWORD PTR _mmngr_used_blocks
	sub	ecx, 1
	mov	DWORD PTR _mmngr_used_blocks, ecx
$LN5@pmmngr_fre:
; Line 202
	jmp	SHORT $LN2@pmmngr_fre
$LN1@pmmngr_fre:
; Line 203
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_free_blocks ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -12						; size = 4
_frame$ = -8						; size = 4
_i$1 = -4						; size = 4
_count$ = 8						; size = 4
_pmmngr_alloc_blocks PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 173
	call	_pmmngr_get_free_block_count
	cmp	eax, DWORD PTR _count$[ebp]
	jae	SHORT $LN5@pmmngr_all
; Line 174
	xor	eax, eax
	jmp	SHORT $LN1@pmmngr_all
$LN5@pmmngr_all:
; Line 176
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	call	?mmap_first_free_s@@YAHI@Z		; mmap_first_free_s
	add	esp, 4
	mov	DWORD PTR _frame$[ebp], eax
; Line 178
	cmp	DWORD PTR _frame$[ebp], -1
	jne	SHORT $LN6@pmmngr_all
; Line 179
	xor	eax, eax
	jmp	SHORT $LN1@pmmngr_all
$LN6@pmmngr_all:
; Line 181
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@pmmngr_all
$LN2@pmmngr_all:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@pmmngr_all:
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR _count$[ebp]
	jae	SHORT $LN3@pmmngr_all
; Line 182
	mov	eax, DWORD PTR _frame$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	push	eax
	call	?mmap_set@@YAXH@Z			; mmap_set
	add	esp, 4
	jmp	SHORT $LN2@pmmngr_all
$LN3@pmmngr_all:
; Line 184
	mov	ecx, DWORD PTR _frame$[ebp]
	shl	ecx, 12					; 0000000cH
	mov	DWORD PTR _addr$[ebp], ecx
; Line 185
	mov	edx, DWORD PTR _mmngr_used_blocks
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _mmngr_used_blocks, edx
; Line 187
	mov	eax, DWORD PTR _addr$[ebp]
$LN1@pmmngr_all:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_alloc_blocks ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -8						; size = 4
_frame$ = -4						; size = 4
_block$ = 8						; size = 4
_pmmngr_free_block PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 161
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR _addr$[ebp], eax
; Line 162
	mov	ecx, DWORD PTR _addr$[ebp]
	shr	ecx, 12					; 0000000cH
	mov	DWORD PTR _frame$[ebp], ecx
; Line 164
	mov	edx, DWORD PTR _frame$[ebp]
	push	edx
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	eax, al
	cmp	eax, 1
	jne	SHORT $LN1@pmmngr_fre
; Line 166
	mov	ecx, DWORD PTR _frame$[ebp]
	push	ecx
	call	?mmap_unset@@YAXH@Z			; mmap_unset
	add	esp, 4
; Line 167
	mov	edx, DWORD PTR _mmngr_used_blocks
	sub	edx, 1
	mov	DWORD PTR _mmngr_used_blocks, edx
$LN1@pmmngr_fre:
; Line 169
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_free_block ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_addr$ = -8						; size = 4
_frame$ = -4						; size = 4
_pmmngr_alloc_block PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 143
	call	_pmmngr_get_free_block_count
	test	eax, eax
	ja	SHORT $LN2@pmmngr_all
; Line 144
	xor	eax, eax
	jmp	SHORT $LN1@pmmngr_all
$LN2@pmmngr_all:
; Line 146
	call	?mmap_first_free@@YAHXZ			; mmap_first_free
	mov	DWORD PTR _frame$[ebp], eax
; Line 148
	cmp	DWORD PTR _frame$[ebp], -1
	jne	SHORT $LN3@pmmngr_all
; Line 149
	xor	eax, eax
	jmp	SHORT $LN1@pmmngr_all
$LN3@pmmngr_all:
; Line 151
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	call	?mmap_set@@YAXH@Z			; mmap_set
	add	esp, 4
; Line 153
	mov	ecx, DWORD PTR _frame$[ebp]
	shl	ecx, 12					; 0000000cH
	mov	DWORD PTR _addr$[ebp], ecx
; Line 154
	mov	edx, DWORD PTR _mmngr_used_blocks
	add	edx, 1
	mov	DWORD PTR _mmngr_used_blocks, edx
; Line 156
	mov	eax, DWORD PTR _addr$[ebp]
$LN1@pmmngr_all:
; Line 157
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_alloc_block ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
tv75 = -16						; size = 4
_aligned_size$ = -12					; size = 4
_i$1 = -8						; size = 4
_aligned_addr$ = -4					; size = 4
_base$ = 8						; size = 4
_size$ = 12						; size = 4
_pmmngr_deinit_region PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 125
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN5@pmmngr_dei
; Line 126
	jmp	SHORT $LN1@pmmngr_dei
$LN5@pmmngr_dei:
; Line 128
	mov	eax, DWORD PTR _base$[ebp]
	shr	eax, 12					; 0000000cH
	mov	DWORD PTR _aligned_addr$[ebp], eax
; Line 129
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, 1
	shr	ecx, 12					; 0000000cH
	mov	DWORD PTR _aligned_size$[ebp], ecx
; Line 131
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@pmmngr_dei
$LN2@pmmngr_dei:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@pmmngr_dei:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _aligned_size$[ebp]
	ja	SHORT $LN1@pmmngr_dei
; Line 133
	mov	ecx, DWORD PTR _aligned_addr$[ebp]
	push	ecx
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@pmmngr_dei
; Line 135
	mov	eax, DWORD PTR _aligned_addr$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	call	?mmap_set@@YAXH@Z			; mmap_set
	add	esp, 4
	mov	edx, DWORD PTR _aligned_addr$[ebp]
	add	edx, 1
	mov	DWORD PTR _aligned_addr$[ebp], edx
; Line 136
	mov	eax, DWORD PTR _mmngr_used_blocks
	add	eax, 1
	mov	DWORD PTR _mmngr_used_blocks, eax
$LN6@pmmngr_dei:
; Line 138
	jmp	SHORT $LN2@pmmngr_dei
$LN1@pmmngr_dei:
; Line 139
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_deinit_region ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
tv75 = -16						; size = 4
_aligned_size$ = -12					; size = 4
_i$1 = -8						; size = 4
_aligned_addr$ = -4					; size = 4
_base$ = 8						; size = 4
_size$ = 12						; size = 4
_pmmngr_init_region PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 104
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN5@pmmngr_ini
; Line 105
	jmp	SHORT $LN1@pmmngr_ini
$LN5@pmmngr_ini:
; Line 107
	mov	eax, DWORD PTR _base$[ebp]
	shr	eax, 12					; 0000000cH
	mov	DWORD PTR _aligned_addr$[ebp], eax
; Line 108
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, 1
	shr	ecx, 12					; 0000000cH
	mov	DWORD PTR _aligned_size$[ebp], ecx
; Line 110
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@pmmngr_ini
$LN2@pmmngr_ini:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@pmmngr_ini:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _aligned_size$[ebp]
	ja	SHORT $LN3@pmmngr_ini
; Line 112
	mov	ecx, DWORD PTR _aligned_addr$[ebp]
	push	ecx
	call	?mmap_test@@YA_NH@Z			; mmap_test
	add	esp, 4
	movzx	edx, al
	cmp	edx, 1
	jne	SHORT $LN6@pmmngr_ini
; Line 114
	mov	eax, DWORD PTR _aligned_addr$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	call	?mmap_unset@@YAXH@Z			; mmap_unset
	add	esp, 4
	mov	edx, DWORD PTR _aligned_addr$[ebp]
	add	edx, 1
	mov	DWORD PTR _aligned_addr$[ebp], edx
; Line 115
	mov	eax, DWORD PTR _mmngr_used_blocks
	sub	eax, 1
	mov	DWORD PTR _mmngr_used_blocks, eax
$LN6@pmmngr_ini:
; Line 117
	jmp	SHORT $LN2@pmmngr_ini
$LN3@pmmngr_ini:
; Line 119
	push	0
	call	?mmap_set@@YAXH@Z			; mmap_set
	add	esp, 4
$LN1@pmmngr_ini:
; Line 121
	mov	esp, ebp
	pop	ebp
	ret	0
_pmmngr_init_region ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_size$ = 8						; size = 4
_base$ = 12						; size = 4
_pmmngr_init PROC
; File c:\users\michalis\documents\visual studio 2015\projects\meos\meos\mmngr_phys.cpp
; Line 92
	push	ebp
	mov	ebp, esp
; Line 93
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _mmngr_memory_size, eax
; Line 94
	mov	ecx, DWORD PTR _base$[ebp]
	mov	DWORD PTR _mmngr_bitmap, ecx
; Line 95
	call	_pmmngr_get_memory_size
	shl	eax, 10					; 0000000aH
	shr	eax, 12					; 0000000cH
	mov	DWORD PTR _mmngr_max_blocks, eax
; Line 96
	mov	edx, DWORD PTR _mmngr_max_blocks
	mov	DWORD PTR _mmngr_used_blocks, edx
; Line 99
	call	_pmmngr_get_block_count
	shr	eax, 3
	push	eax
	push	255					; 000000ffH
	mov	eax, DWORD PTR _mmngr_bitmap
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 100
	pop	ebp
	ret	0
_pmmngr_init ENDP
_TEXT	ENDS
END
